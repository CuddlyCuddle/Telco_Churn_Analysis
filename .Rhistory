library(caret)
install.packages("caret")
# Testing Model with Analysis of
anova(ReducedModel, CompleteModel)
source('~/GitHub/Telco_Churn_Analysis/Churn_Analysis.R')
# Churn Analysis:
#
#
#
#
#
#
### Packages
library(ROSE)
library(caret)
library(e1071)
### Preliminary Functions
undersample_ds <- function(x, classCol, nsamples_class){
for (i in 1:length(unique(x[, classCol]))){
class.i <- unique(x[, classCol])[i]
if((sum(x[, classCol] == class.i) - nsamples_class) != 0){
x <- x[-sample(which(x[, classCol] == class.i),
sum(x[, classCol] == class.i) - nsamples_class), ]
}
}
return(x)
}
data[,"Churn"]
### Readigng in Data
data  <- read.csv("C:/Users/jeanp/OneDrive/Documents/GitHub/Telco_Churn_Analysis/WA_Fn-UseC_-Telco-Customer-Churn.csv")
summary(data)
str(data)
### Recoding Data to reduce number of redundent factors within each Variable
# For this sitation cols 8, 10:15 have three factors Yes, no, and "No phone service" or "No Internet Service", respectively.
data[c(8,10:15)] <- as.factor(ifelse(data[c(8,10:15)] == "Yes", "Yes" , "No"))
# Col 3 was originally an indicator, however, to match the respective data it was returned to a str.
data[,3] <- as.factor(ifelse(data[,3] == 1, "Yes" , "No"))
# Ensuring that the base group for churn is "No" to determine what methods help retain customers
data$Churn <- relevel(data$Churn, ref = "Yes")
### Data Exploration:
for(i in c(2:20)){
temp0 <- names(data)
if(is.factor(data[,i]) == TRUE){
plot(data[,i], main = temp0[i])
print(table(data[,i]))
}
}
# Creating a Bar Graph for the binomial factor "Churn"
plot(data$Churn, main = "Churn")
table(data$Churn)
t_p <- data.frame(Response = c("No", "Yes"), Count = c(5174, 1869))
pie(x = t_p$Count, labels = t_p$Response, main = "Churn")
# Based on the Bar Chart given above, the data is not balanced. Thus, it will need to be balanced:
test <- undersample_ds(data, "Churn", 500)
table(test$Churn)
# Univariate Visualization
test <- glm(Churn ~ MonthlyCharges, data = data, family = binomial(link = "logit"))
prob <- predict.glm(test, type = "response")
plot(data$MonthlyCharges, ifelse(data$Churn == "Yes", 1, 0))
curve(predict.glm(test,data.frame(MonthlyCharges=x), type = "response"), add = TRUE)
# Model Building (Backward Selection)
Model0 <- glm(Churn ~ 1, data = data, family = binomial(link = logit))
CompleteModel <- glm(Churn ~ gender + SeniorCitizen + Partner + Dependents + tenure + PhoneService + MultipleLines + InternetService + OnlineSecurity + OnlineBackup + DeviceProtection + TechSupport + StreamingMovies + Contract + PaperlessBilling + PaymentMethod + MonthlyCharges, data = data, family = binomial(link = "logit"))
ReducedModel <- step(Model0, direction = 'both', scope = formula(CompleteModel))
summary(ReducedModel)
# Testing Model with Analysis of
anova(ReducedModel, CompleteModel)
pr
#
ctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 5, summaryFunction = twoClassSummary, classProbs = TRUE)
# Model Building (Backward Selection)
Model0 <- glm(Churn ~ 1, data = data, family = binomial(link = logit))
CompleteModel <- glm(Churn ~ gender + SeniorCitizen + Partner + Dependents + tenure + PhoneService + MultipleLines + InternetService + OnlineSecurity + OnlineBackup + DeviceProtection + TechSupport + StreamingMovies + Contract + PaperlessBilling + PaymentMethod + MonthlyCharges, data = data, family = binomial(link = "logit"))
ReducedModel <- step(Model0, direction = 'both', scope = formula(CompleteModel))
summary(ReducedModel)
# Testing Model with Analysis of
anova(ReducedModel, CompleteModel)
# Testing Model with Analysis of
Model_test <- anova(ReducedModel, CompleteModel)
pchisq(Model_test$Deviance, Model_test$Df, lower.tail=FALSE)
# Testing Model with Analysis of
Model_test <- anova(ReducedModel, CompleteModel)
pchisq(Model_test$Deviance, Model_test$Df, lower.tail=FALSE)
# Testing Model with Analysis of
Model_test <- anova(ReducedModel, CompleteModel)
anova(ReducedModel, CompleteModel)
pchisq(2.895, 5, FALSE)
pchisq(Model_test$Deviance, Model_test$Df, lower.tail=FALSE)
pchisq(2.895, 5, FALSE)
pchisq(2.895, 5, lower.tail =  FALSE)
# Testing Model with Analysis of
Model_test <- anova(ReducedModel, CompleteModel)
pchisq(Model_test$Deviance, Model_test$Df, lower.tail=FALSE)
# Churn Analysis:
#
#
#
#
#
#
### Packages
library(ROSE)
library(caret)
library(e1071)
### Preliminary Functions
undersample_ds <- function(x, classCol, nsamples_class){
for (i in 1:length(unique(x[, classCol]))){
class.i <- unique(x[, classCol])[i]
if((sum(x[, classCol] == class.i) - nsamples_class) != 0){
x <- x[-sample(which(x[, classCol] == class.i),
sum(x[, classCol] == class.i) - nsamples_class), ]
}
}
return(x)
}
data[,"Churn"]
### Readigng in Data
data  <- read.csv("C:/Users/jeanp/OneDrive/Documents/GitHub/Telco_Churn_Analysis/WA_Fn-UseC_-Telco-Customer-Churn.csv")
summary(data)
str(data)
### Recoding Data to reduce number of redundent factors within each Variable
# For this sitation cols 8, 10:15 have three factors Yes, no, and "No phone service" or "No Internet Service", respectively.
data[c(8,10:15)] <- as.factor(ifelse(data[c(8,10:15)] == "Yes", "Yes" , "No"))
# Col 3 was originally an indicator, however, to match the respective data it was returned to a str.
data[,3] <- as.factor(ifelse(data[,3] == 1, "Yes" , "No"))
# Ensuring that the base group for churn is "No" to determine what methods help retain customers
data$Churn <- relevel(data$Churn, ref = "No")
### Data Exploration:
for(i in c(2:20)){
temp0 <- names(data)
if(is.factor(data[,i]) == TRUE){
plot(data[,i], main = temp0[i])
print(table(data[,i]))
}
}
# Creating a Bar Graph for the binomial factor "Churn"
plot(data$Churn, main = "Churn")
table(data$Churn)
t_p <- data.frame(Response = c("No", "Yes"), Count = c(5174, 1869))
pie(x = t_p$Count, labels = t_p$Response, main = "Churn")
# Based on the Bar Chart given above, the data is not balanced. Thus, it will need to be balanced:
test <- undersample_ds(data, "Churn", 500)
table(test$Churn)
# Univariate Visualization
test <- glm(Churn ~ MonthlyCharges, data = data, family = binomial(link = "logit"))
prob <- predict.glm(test, type = "response")
plot(data$MonthlyCharges, ifelse(data$Churn == "Yes", 1, 0))
curve(predict.glm(test,data.frame(MonthlyCharges=x), type = "response"), add = TRUE)
# Model Building (Backward Selection)
Model0 <- glm(Churn ~ 1, data = data, family = binomial(link = logit))
CompleteModel <- glm(Churn ~ gender + SeniorCitizen + Partner + Dependents + tenure + PhoneService + MultipleLines + InternetService + OnlineSecurity + OnlineBackup + DeviceProtection + TechSupport + StreamingMovies + Contract + PaperlessBilling + PaymentMethod + MonthlyCharges, data = data, family = binomial(link = "logit"))
ReducedModel <- step(Model0, direction = 'both', scope = formula(CompleteModel))
summary(ReducedModel)
# Testing Model with Analysis of
Model_test <- anova(ReducedModel, CompleteModel)
pchisq(Model_test$Deviance, Model_test$Df, lower.tail=FALSE)
#
ctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 5, summaryFunction = twoClassSummary, classProbs = TRUE)
#
ctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 5, summaryFunction = twoClassSummary, classProbs = TRUE)
library(caret)
### Packages
library(ROSE)
library(caret)
library(e1071)
#
ctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 5, summaryFunction = twoClassSummary, classProbs = TRUE)
library(caret)
